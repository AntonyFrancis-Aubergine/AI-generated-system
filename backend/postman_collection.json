{
  "info": {
    "name": "Fitness Class Booking System API",
    "description": "API collection for Fitness Class Booking System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "health"]
            },
            "description": "Check if the API is up and running"
          },
          "response": []
        }
      ],
      "description": "Endpoints to check system health"
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"Password123!\",\n    \"role\": \"USER\",\n    \"mobile\": \"1234567890\",\n    \"address\": \"123 Main St, City\",\n    \"dob\": \"1990-01-01\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new user in the system. Returns the created user without password."
          },
          "response": []
        },
        {
          "name": "Register Instructor",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane.smith@example.com\",\n    \"password\": \"Password123!\",\n    \"role\": \"INSTRUCTOR\",\n    \"mobile\": \"0987654321\",\n    \"address\": \"456 Fitness Ave, City\",\n    \"dob\": \"1985-05-15\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new instructor in the system. Returns the created user without password."
          },
          "response": []
        },
        {
          "name": "Register Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@example.com\",\n    \"password\": \"Password123!\",\n    \"role\": \"ADMIN\",\n    \"mobile\": \"5555555555\",\n    \"address\": \"789 Admin St, City\",\n    \"dob\": \"1980-12-25\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new admin in the system. Returns the created user without password."
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.data && jsonData.data.token) {",
                  "    pm.environment.set(\"authToken\", jsonData.data.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login with user credentials and get auth token"
          },
          "response": []
        }
      ],
      "description": "User authentication endpoints"
    },
    {
      "name": "Fitness Classes",
      "item": [
        {
          "name": "Get All Fitness Classes",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/fitness-classes?page=1&limit=10&name=yoga",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "fitness-classes"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "name",
                  "value": "yoga",
                  "description": "Search by class name (optional)"
                },
                {
                  "key": "categoryId",
                  "value": "",
                  "description": "Filter by category ID (optional)",
                  "disabled": true
                },
                {
                  "key": "instructorId",
                  "value": "",
                  "description": "Filter by instructor ID (optional)",
                  "disabled": true
                },
                {
                  "key": "startDateFrom",
                  "value": "",
                  "description": "Filter classes starting after this date (ISO format, optional)",
                  "disabled": true
                },
                {
                  "key": "startDateTo",
                  "value": "",
                  "description": "Filter classes starting before this date (ISO format, optional)",
                  "disabled": true
                }
              ]
            },
            "description": "Get a list of all fitness classes with filtering and pagination. Requires admin role. Returns a paginated result with fitness class data."
          },
          "response": []
        },
        {
          "name": "Create Fitness Class",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Yoga for Beginners\",\n    \"categoryId\": \"your-category-id\",\n    \"instructorId\": \"your-instructor-id\",\n    \"startsAt\": \"2024-07-15T10:00:00.000Z\",\n    \"endsAt\": \"2024-07-15T11:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/fitness-classes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "fitness-classes"]
            },
            "description": "Create a new fitness class. Requires admin role. The start and end times must be valid ISO datetime strings, and the end time must be after the start time."
          },
          "response": []
        }
      ],
      "description": "Fitness class management endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ]
}
